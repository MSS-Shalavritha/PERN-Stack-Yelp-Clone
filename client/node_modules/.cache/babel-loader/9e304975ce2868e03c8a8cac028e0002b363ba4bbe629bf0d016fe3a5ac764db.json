{"ast":null,"code":"var _jsxFileName = \"/Users/shalavritha/Desktop/Yelp Clone/client/src/routes/RestaurantDetailPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RestaurantsContext } from '../context/RestaurantsContext';\nimport RestaurantFinder from '../apis/RestaurantFinder';\nimport StarRating from '../components/StarRating';\nimport Reviews from '../components/Reviews';\nimport AddReview from '../components/AddReview';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RestaurantDetailPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    selectedRestaurant,\n    setSelectedRestaurant\n  } = useContext(RestaurantsContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await RestaurantFinder.get(`/${id}`);\n        console.log(response.data.data.reviews);\n        setSelectedRestaurant(response.data.data.restaurants);\n      } catch (err) {}\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedRestaurant && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Reviews, {\n          reviews: selectedRestaurant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AddReview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantDetailPage, \"+rDXiK/27tQ/jGh0QUUGVQAry1Y=\", false, function () {\n  return [useParams];\n});\n_c = RestaurantDetailPage;\nexport default RestaurantDetailPage;\nvar _c;\n$RefreshReg$(_c, \"RestaurantDetailPage\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useParams","RestaurantsContext","RestaurantFinder","StarRating","Reviews","AddReview","jsxDEV","_jsxDEV","Fragment","_Fragment","RestaurantDetailPage","_s","id","selectedRestaurant","setSelectedRestaurant","fetchData","response","get","console","log","data","reviews","restaurants","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shalavritha/Desktop/Yelp Clone/client/src/routes/RestaurantDetailPage.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { RestaurantsContext } from '../context/RestaurantsContext';\nimport RestaurantFinder from '../apis/RestaurantFinder';\nimport StarRating from '../components/StarRating';\nimport Reviews from '../components/Reviews';\nimport AddReview from '../components/AddReview';\n\nconst RestaurantDetailPage = () => {\n  const {id} = useParams();\n  const {selectedRestaurant, setSelectedRestaurant} = useContext(RestaurantsContext);\n\n  useEffect( () => {\n    const fetchData = async () => {\n    try{ \n        const response = await RestaurantFinder.get(`/${id}`);\n        console.log(response.data.data.reviews);\n        setSelectedRestaurant(response.data.data.restaurants);\n      }catch(err) {}\n     };\n    fetchData();\n  }, []);\n  return (\n    <div>{selectedRestaurant && (\n      <>\n      <div className=\"mt-3\">\n        <Reviews reviews={selectedRestaurant}/>\n        </div>\n        <AddReview />\n      </>\n    )}</div>\n\n  )\n}\nexport default RestaurantDetailPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,kBAAkB,QAAQ,+BAA+B;AAClE,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAACC;EAAE,CAAC,GAAGZ,SAAS,CAAC,CAAC;EACxB,MAAM;IAACa,kBAAkB;IAAEC;EAAqB,CAAC,GAAGjB,UAAU,CAACI,kBAAkB,CAAC;EAElFF,SAAS,CAAE,MAAM;IACf,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMd,gBAAgB,CAACe,GAAG,CAAC,IAAIL,EAAE,EAAE,CAAC;QACrDM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACC,OAAO,CAAC;QACvCP,qBAAqB,CAACE,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACE,WAAW,CAAC;MACvD,CAAC,QAAMC,GAAG,EAAE,CAAC;IACd,CAAC;IACFR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBACER,OAAA;IAAAiB,QAAA,EAAMX,kBAAkB,iBACtBN,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACAjB,OAAA;QAAKkB,SAAS,EAAC,MAAM;QAAAD,QAAA,eACnBjB,OAAA,CAACH,OAAO;UAACiB,OAAO,EAAER;QAAmB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACNtB,OAAA,CAACF,SAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACb;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAGZ,CAAC;AAAAlB,EAAA,CAzBKD,oBAAoB;EAAA,QACXV,SAAS;AAAA;AAAA8B,EAAA,GADlBpB,oBAAoB;AA0B1B,eAAeA,oBAAoB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}