{"ast":null,"code":"// import React, { useContext, useState, useEffect } from 'react'\n// import { useParams } from 'react-router-dom'\n// import { RestaurantsContext } from '../context/RestaurantsContext';\n// import RestaurantFinder from '../apis/RestaurantFinder';\n\n// const RestaurantDetailPage = () => {\n//   const {id} = useParams();\n//   const [selectedRestaurant, setSelectedRestaurant] = useContext(RestaurantsContext);\n\n//   useEffect( () => {\n//     const fetchData = async () => {\n//     try{ \n//         const response = await RestaurantFinder.get(`/${id}`);\n//         console.log(response);\n//         setSelectedRestaurant(response.data.data.restaurants);\n//       }catch(err) {}\n//      };\n//     fetchData();\n//   }, [id, setSelectedRestaurant]);\n//   return (\n//     <div>{selectedRestaurant.name}</div>\n//   )\n// }\n\n// export default RestaurantDetailPage","map":{"version":3,"names":[],"sources":["/Users/shalavritha/Desktop/Yelp Clone/client/src/routes/RestaurantDetailPage.jsx"],"sourcesContent":["// import React, { useContext, useState, useEffect } from 'react'\n// import { useParams } from 'react-router-dom'\n// import { RestaurantsContext } from '../context/RestaurantsContext';\n// import RestaurantFinder from '../apis/RestaurantFinder';\n\n// const RestaurantDetailPage = () => {\n//   const {id} = useParams();\n//   const [selectedRestaurant, setSelectedRestaurant] = useContext(RestaurantsContext);\n\n//   useEffect( () => {\n//     const fetchData = async () => {\n//     try{ \n//         const response = await RestaurantFinder.get(`/${id}`);\n//         console.log(response);\n//         setSelectedRestaurant(response.data.data.restaurants);\n//       }catch(err) {}\n//      };\n//     fetchData();\n//   }, [id, setSelectedRestaurant]);\n//   return (\n//     <div>{selectedRestaurant.name}</div>\n//   )\n// }\n\n// export default RestaurantDetailPage"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}